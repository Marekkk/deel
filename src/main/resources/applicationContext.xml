<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/context   
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd
          http://www.springframework.org/schema/aop 
		  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx.xsd">


	<context:annotation-config  />


	<aop:aspectj-autoproxy>
		<aop:include name="FSRollback"/>
	</aop:aspectj-autoproxy>
	
	<bean id="fileSystemMapper" class="org.deel.service.FileGatewayStub"/>
	<bean id="FSRollback" class="org.deel.aspect.FSRollback"></bean>

	<bean id="teamDAO" class="org.deel.dao.impl.TeamDaoImpl" autowire="byName" />

	<bean id="companyDAO" class="org.deel.dao.impl.CompanyDaoImpl" autowire="byName"/>
	<bean id="folderDAO" class="org.deel.dao.impl.FolderDaoImpl"
		autowire="byName" />

	<bean id="fileRevisionDAO" class="org.deel.dao.impl.FileRevisionDAOImpl"
		autowire="byName" />

	<bean id="fileDAO" class="org.deel.dao.impl.FileDaoImpl" autowire="byName" />
	<bean id="filePathDAO" class="org.deel.dao.impl.FilePathDaoImpl"
		autowire="byName" />
	<bean id="userDAO" class="org.deel.dao.impl.UserDaoImpl" autowire="byName" />
	

	<bean id="fileService" class="org.deel.service.FileServiceStub"
		autowire="byName" />
	<bean id="userService" class="org.deel.service.impl.UserServiceImpl"
		autowire="byName" />
	<bean id="companyService" class="org.deel.service.impl.CompanyServiceImpl" autowire="byName" />	

	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/ea_dropbox" />
		<property name="username" value="root" />
		<property name="password" value="asdrubale" />
	</bean>

	<!-- Session Factory to use for mapping -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>org.deel.domain.Company</value>
				<value>org.deel.domain.User</value>
				<value>org.deel.domain.Team</value>
				<value>org.deel.domain.FilePath</value>
				<value>org.deel.domain.File</value>
				<value>org.deel.domain.FileRevision</value>
				<value>org.deel.domain.Folder</value>
				<value>org.deel.domain.Category</value>
				<value>org.deel.domain.FileRevision</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>


	<tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<security:http>
		<security:intercept-url pattern="/admin/**"
			access="ROLE_ADMIN" />
		<security:intercept-url pattern="/default**"
			access="ROLE_ADMIN, ROLE_USER" />
		<security:intercept-url pattern="/login**"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/user/new*"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/user/new.json"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />

		<security:intercept-url pattern="/resources/**"
			access="IS_AUTHENTICATED_ANONYMOUSLY, ROLE_USER" />
		<security:intercept-url pattern="/**" access="ROLE_USER" />
		<security:form-login login-page='/login'
			login-processing-url="/loginprocess" default-target-url="/default" />
		<security:logout logout-url="/logout" logout-success-url="/default"/>
		<security:form-login />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider
			ref="daoAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="customUserDetailsService" />
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<bean id="customUserDetailsService" class="org.deel.service.CustomUserDetailsService"
		autowire="byName" />

	
</beans>
