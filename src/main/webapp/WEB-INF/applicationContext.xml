<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd">


	
	<!-- <bean id="userService" class="org.mockito.Mockito" factory-method="mock"> -->
	<!-- <constructor-arg value="org.deel.service.UserService" /> -->
	<!-- </bean> -->
	<bean id="userService" class="org.deel.service.impl.UserServiceImpl" />
	<bean id="userDAO" class="org.deel.dao.impl.UserDaoImpl" />
	<bean id="companyDAO" class="org.deel.dao.impl.CompanyDaoImpl" />
	<bean id="companyService" class="org.deel.service.impl.CompanyServiceImpl" />


	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/ea_dropbox" />
		<property name="username" value="root" />
		<property name="password" value="asdrubale" />
	</bean>

	<!-- Session Factory to use for mapping -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>org.deel.domain.Company</value>
				<value>org.deel.domain.User</value>
				<value>org.deel.domain.Team</value>
				<value>org.deel.domain.FilePath</value>
				<value>org.deel.domain.File</value>
				<value>org.deel.domain.Folder</value>
				<value>org.deel.domain.Category</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
<!-- 				<prop key="hibernate.hbm2ddl.auto">create</prop> -->
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<!-- <security:http> -->
	<!-- <security:intercept-url pattern="/login*" -->
	<!-- access="IS_AUTHENTICATED_ANONYMOUSLY" /> -->
	<!-- <security:intercept-url pattern="/**" access="ROLE_USER" /> -->
	<!-- <security:form-login login-page='/login' -->
	<!-- login-processing-url="/loginP" /> -->
	<!-- <security:logout logout-url="/logout" /> -->
	<!-- </security:http> -->

	<!-- <security:authentication-manager> -->
	<!-- <security:authentication-provider -->
	<!-- ref="daoAuthenticationProvider" /> -->
	<!-- </security:authentication-manager> -->

	<!-- <bean id="daoAuthenticationProvider" -->
	<!-- class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> -->
	<!-- <property name="userDetailsService" ref="inMemoryDaoImpl" /> -->
	<!-- <property name="passwordEncoder" ref="passwordEncoder" /> -->
	<!-- </bean> -->

	<!-- <bean id="passwordEncoder" -->
	<!-- class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" 
		/> -->

	<!-- <security:user-service id="inMemoryDaoImpl"> -->
	<!-- <security:user name="asd" -->
	<!-- password="$2a$10$iy.hJkQwifCDS9P85qgoHOfLZp4yVopZ/LFq9DslLVvTUgJArKK9e" -->
	<!-- authorities="ROLE_USER" /> -->
	<!-- </security:user-service> -->

	<!-- <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
	<!-- destroy-method="close"> -->
	<!-- <property name="driverClassName" value="org.hsqldb.jdbcDriver" /> -->
	<!-- <property name="url" value="jdbc:hsqldb:hsql://localhost:9001" /> -->
	<!-- <property name="username" value="sa" /> -->
	<!-- <property name="password" value="" /> -->
	<!-- </bean> -->

	<!-- <bean id="mySessionFactory" -->
	<!-- class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> -->
	<!-- <property name="dataSource" ref="myDataSource" /> -->


	<!-- <property name="hibernateProperties"> -->
	<!-- <value> -->
	<!-- hibernate.dialect=org.hibernate.dialect.HSQLDialect -->
	<!-- </value> -->
	<!-- </property> -->
	<!-- </bean> -->

</beans>
